Vagrant::Config.run do |config|
  config.vm.define :app do |app_config|
    # Every Vagrant virtual environment requires a box to build off of.
    app_config.vm.box = "ubuntu-11.10-server-amd64"

    # The url from where the 'config.vm.box' box will be fetched if it
    # doesn't already exist on the user's system.
    app_config.vm.box_url = "http://dl.dropbox.com/u/6721656/cgarvis-ubuntu-11.10-server-amd64.box"

    # Boot with a GUI so you can see the screen. (Default is headless)
    # app_config.vm.boot_mode = :gui

    # Assign this VM to a host only network IP, allowing you to access it
    # via the IP.
    app_config.vm.network :hostonly, "33.33.33.20"
    app_config.ssh.max_tries = 400

    # Forward a port from the guest to the host, which allows for outside
    # computers to access the VM, whereas host only networking does not.
    # app_config.vm.forward_port "http", 80, 8080

    app_config.vm.customize ["modifyvm", :id, "--memory", "384", "--cpus", "1", "--name", "Li3 Demo - App"]

    # Share an additional folder to the guest VM. The first argument is
    # an identifier, the second is the path on the guest to mount the
    # folder, and the third is the path on the host to the actual folder.
    app_config.vm.share_folder "v-data", "/var/www", "../data", :nfs => (RUBY_PLATFORM =~ /linux/ or RUBY_PLATFORM =~ /darwin/)

    # Enable provisioning with chef solo, specifying a cookbooks path (relative
    # to this Vagrantfile), and adding some recipes and/or roles.
    #
    app_config.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = "cookbooks"
      chef.add_recipe "mongodb::10gen_repo"
      chef.add_recipe "nginx"
      chef.add_recipe "php-fpm"
      chef.add_recipe "php::module_mongo"
      chef.add_recipe "gearman::php"
    end
  end

  config.vm.define :job do |job_config|
    # Every Vagrant virtual environment requires a box to build off of.
    job_config.vm.box = "ubuntu-11.10-server-amd64"

    # The url from where the 'config.vm.box' box will be fetched if it
    # doesn't already exist on the user's system.
    job_config.vm.box_url = "http://dl.dropbox.com/u/6721656/cgarvis-ubuntu-11.10-server-amd64.box"

    # Boot with a GUI so you can see the screen. (Default is headless)
    # job_config.vm.boot_mode = :gui

    # Assign this VM to a host only network IP, allowing you to access it
    # via the IP.
    job_config.vm.network :hostonly, "33.33.33.21"
    job_config.ssh.max_tries = 400

    # Forward a port from the guest to the host, which allows for outside
    # computers to access the VM, whereas host only networking does not.
    # job_config.vm.forward_port "http", 80, 8080

    job_config.vm.customize ["modifyvm", :id, "--memory", "384", "--cpus", "1", "--name", "Li3 Demo - Job"]

    # Share an additional folder to the guest VM. The first argument is
    # an identifier, the second is the path on the guest to mount the
    # folder, and the third is the path on the host to the actual folder.
    job_config.vm.share_folder "v-data", "/var/www", "../data", :nfs => (RUBY_PLATFORM =~ /linux/ or RUBY_PLATFORM =~ /darwin/)

    # Enable provisioning with chef solo, specifying a cookbooks path (relative
    # to this Vagrantfile), and adding some recipes and/or roles.
    #
    job_config.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = "cookbooks"
      chef.add_recipe "php"
      chef.add_recipe "php::module_mongo"
      chef.add_recipe "gearman::server"
      chef.add_recipe "gearman::php"
    end
  end
end
